generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  id                     Int                    @id @default(autoincrement())
  name                   String
  detail                 String?
  defaultHours           Int
  tutorLink              String
  clueLink               String
  price                  Int
  status                 String
  odmCourseId            Int?
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @default(now())
  branch                 String?                @db.VarChar(45)
  webappCourseId         Int?
  webappTableOfContentId Int?
  webappPlaylistId       Int?
  playlist               String?
  CourseLesson           CourseLesson[]
  CourseOnCourseLesson   CourseOnCourseLesson[]
  Delivery               Delivery[]

  @@index([name])
}

model CourseLesson {
  id                    Int                     @id @default(autoincrement())
  name                  String
  position              Int
  courseIdLesson        Int?
  Course                Course?                 @relation(fields: [courseIdLesson], references: [id], map: "courseIdLesson")
  CourseOnCourseLesson  CourseOnCourseLesson[]
  CourseVideo           CourseVideo[]
  LessonOnDocument      LessonOnDocument[]
  LessonOnDocumentBook  LessonOnDocumentBook[]
  LessonOnDocumentSheet LessonOnDocumentSheet[]

  @@index([courseIdLesson], map: "courseId_idx")
}

model CourseOnCourseLesson {
  courseId     Int
  lessonId     Int
  Course       Course       @relation(fields: [courseId], references: [id])
  CourseLesson CourseLesson @relation(fields: [lessonId], references: [id])

  @@id([courseId, lessonId])
  @@index([lessonId], map: "CourseOnCourseLesson_lessonId_fkey")
}

model CourseVideo {
  id            Int          @id @default(autoincrement())
  videoLink     String
  hour          Int
  minute        Int
  position      Int
  lessonId      Int
  descriptionId Int?
  name          String?
  CourseLesson  CourseLesson @relation(fields: [lessonId], references: [id])

  @@index([lessonId], map: "CourseVideo_lessonId_fkey")
}

model DocumentBook {
  id                   Int                    @id @default(autoincrement())
  image                String?
  inStock              Int?
  name                 String
  LessonOnDocumentBook LessonOnDocumentBook[]

  @@index([name])
}

model DocumentPreExam {
  id               Int                @id @default(autoincrement())
  name             String
  url              String
  LessonOnDocument LessonOnDocument[]

  @@index([name])
}

model DocumentSheet {
  id                    Int                     @id @default(autoincrement())
  name                  String
  url                   String
  LessonOnDocumentSheet LessonOnDocumentSheet[]

  @@index([name])
}

model LessonOnDocument {
  lessonId        Int
  preExamId       Int
  CourseLesson    CourseLesson    @relation(fields: [lessonId], references: [id])
  DocumentPreExam DocumentPreExam @relation(fields: [preExamId], references: [id])

  @@id([lessonId, preExamId])
  @@index([preExamId], map: "LessonOnDocument_preExamId_fkey")
}

model LessonOnDocumentBook {
  lessonId     Int
  bookId       Int
  DocumentBook DocumentBook @relation(fields: [bookId], references: [id])
  CourseLesson CourseLesson @relation(fields: [lessonId], references: [id])

  @@id([lessonId, bookId])
  @@index([bookId], map: "LessonOnDocumentBook_bookId_fkey")
}

model LessonOnDocumentSheet {
  lessonId      Int
  sheetId       Int
  CourseLesson  CourseLesson  @relation(fields: [lessonId], references: [id])
  DocumentSheet DocumentSheet @relation(fields: [sheetId], references: [id])

  @@id([lessonId, sheetId])
  @@index([sheetId], map: "LessonOnDocumentSheet_sheetId_fkey")
}

model DeliverShipService {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(45)
  imageUrl    String?
  trackingUrl String?
  Delivery    Delivery[]
}

model Delivery {
  id                 Int                 @id @default(autoincrement())
  type               String              @db.VarChar(45)
  status             String              @db.VarChar(45)
  updatedAddress     String?             @db.VarChar(45)
  courseId           Int?
  webappOrderId      Int?
  webappCourseId     Int?
  webappAdminId      Int?
  note               String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now())
  serviceId          Int?
  trackingCode       String?
  Course             Course?             @relation(fields: [courseId], references: [id], onUpdate: NoAction, map: "courseId")
  DeliverShipService DeliverShipService? @relation(fields: [serviceId], references: [id], onDelete: Restrict, map: "trackingServiceId")

  @@index([courseId], map: "courseId_idx")
  @@index([serviceId], map: "trackingServiceId_idx")
}

model Tutor {
  id   Int    @id
  name String @db.VarChar(45)
}
